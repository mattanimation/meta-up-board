From 93b210995790fa569e42970e946f17aafc3dcfc5 Mon Sep 17 00:00:00 2001
From: Carlos Calderon <carlos@emutex.com>
Date: Wed, 3 Oct 2018 13:09:36 +0100
Subject: [PATCH 2/3] serial: 8250_dw: add quirk to disable DMA on Cherry Trail
 SoC

Using DMA with the HS-UART on the Atom X5-8350 "Cherry Trail" SoC
results in data loss/corruption on UART transfers and the following
error message filling the kernel log:
  "serial8250: too much work for irq39"

As a temporary workaround, this commit disables use of DMA for the
HS-UARTs on Cherry Trail (matching ACPI device ID "8086228A").
---
 drivers/tty/serial/8250/8250_dw.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/tty/serial/8250/8250_dw.c b/drivers/tty/serial/8250/8250_dw.c
index d31b975..bb7d66d 100644
--- a/drivers/tty/serial/8250/8250_dw.c
+++ b/drivers/tty/serial/8250/8250_dw.c
@@ -67,6 +67,7 @@ struct dw8250_data {
 
 	unsigned int		skip_autocfg:1;
 	unsigned int		uart_16550_compatible:1;
+	unsigned int		skip_dma:1;
 };
 
 static inline u32 dw8250_readl_ext(struct uart_port *p, int offset)
@@ -432,10 +433,13 @@ static void dw8250_quirks(struct uart_port *p, struct dw8250_data *data)
 		p->regshift = 2;
 		p->serial_in = dw8250_serial_in32;
 		data->uart_16550_compatible = true;
+	} else if (acpi_dev_present("8086228A", NULL, -1)) {
+		data->skip_dma = true;
 	}
 
 	/* Platforms with iDMA */
-	if (platform_get_resource_byname(to_platform_device(p->dev),
+	if (!data->skip_dma &&
+	    platform_get_resource_byname(to_platform_device(p->dev),
 					 IORESOURCE_MEM, "lpss_priv")) {
 		data->dma.rx_param = p->dev->parent;
 		data->dma.tx_param = p->dev->parent;
@@ -631,7 +635,7 @@ static int dw8250_probe(struct platform_device *pdev)
 		dw8250_setup_port(p);
 
 	/* If we have a valid fifosize, try hooking up DMA */
-	if (p->fifosize) {
+	if (!data->skip_dma && p->fifosize) {
 		data->dma.rxconf.src_maxburst = p->fifosize / 4;
 		data->dma.txconf.dst_maxburst = p->fifosize / 4;
 		uart.dma = &data->dma;
-- 
2.7.4

